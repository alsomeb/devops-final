name: build and deploy testing env

on:
  pull_request:
    branches:
      - master

env:
  # Defines three custom environment variables for the workflow.
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # The short ref name of the branch or tag that triggered the workflow run.
  # This value matches the branch or tag name shown on GitHub. For example, feature-branch-1.
  BRANCH_NAME: ${{ github.base_ref }}

jobs:
  #Använder annat workflow för tester
  unit-test:
    name: Unit-Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      # Give wrapper rw rights
      - name: Chmod gradle wrapper
        run: chmod +x ./gradlew

      # Build With Gradle Action
      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: test

  integration-test:
    name: Integration-Test
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      # Give wrapper rw rights
      - name: Chmod gradle wrapper
        run: chmod +x ./gradlew

      # Build With Gradle Action
      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: integrationTest

  # HÄR BYGGER VI IMG OCH SKICKAR UPP TILL GHCR REGISTRY
  build-and-push:
    name: build-and-push
    runs-on: ubuntu-latest
    # So we can use this output in the next job
    outputs:
      tags: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.BRANCH_NAME}}
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    # måste klara testerna först innan vi kan bygga applikationen
    needs: [unit-test, integration-test]
    steps:
      - name: Check for GITHUB_TOKEN
        run: |
          if [ -z "${{ secrets.token }}" ]; then
            echo "You must provide an GITHUB_TOKEN secret."
            exit 1
          fi

      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      # Give wrapper rw rights
      - name: Chmod gradle wrapper
        run: chmod +x ./gradlew

      # Build With Gradle Action
      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: build

      - name: Log in to the GHCR Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.token }}

      - name: Build and push From DockerFile
        uses: docker/build-push-action@v5
        with:
          context: . # Dockerfile is in root folder of context
          push: true
          tags: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.BRANCH_NAME}}

  system-test:
    name: system-test
    needs: build-and-push
    runs-on: ubuntu-latest
    services:
      app:
        image: ${{ needs.build-and-push.outputs.tags }}
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.token }}
        ports:
          - 8080:8080
        options: --health-cmd="curl -f http://localhost:8080/api/cars" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      # Give wrapper rw rights
      - name: Chmod gradle wrapper
        run: chmod +x ./gradlew

      # Build With Gradle Action
      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: systemTest

  # Fake Deploy Testing Env(CD)
  fake-deploy-testing-env:
    name: Fake Deploy Application to testing environment
    needs: system-test
    runs-on: ubuntu-latest
    steps:
      - name: Echo Image Name From GHCR Registry
        run: echo "Fake deployed to testing environment - ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.BRANCH_NAME}}"
